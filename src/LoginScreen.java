/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template userDetails, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sahir
 */
import java.awt.event.WindowEvent;
import java.awt.Toolkit;
import java.io.*;
import FileHandler.FileRead;

public class LoginScreen extends javax.swing.JFrame implements FileRead {

    /**
     * Creates new form LoginScreen
     */
    public String username;
    char[] password;
    public String userDetailsString;
    File userDetails, currentUserIndex;
    int currentUser;
    public LoginScreen() {
        initComponents();
        setTitle("Login");
        this.PasswordNoMatch.setVisible(false);
        try {
            userDetails = new File("UserLoginDetails.txt");
            currentUserIndex = new File("CurrentUserIndex.txt");
            if(!currentUserIndex.exists())
                currentUserIndex.createNewFile();
        }
        catch (Exception e) {
            System.out.println("Error: " + e);
        }
        getFileText();
    }
    
    public void getFileText() {
        try {
            userDetailsString = "";
            BufferedReader br = new BufferedReader(new FileReader(userDetails));
            String line;
            while((line = br.readLine()) != null) {
                userDetailsString += line +"\n";
            }
        }
        catch (Exception e) {
            System.out.println("Error: " + e);
        }
        System.out.println("userDetailsString: " + userDetailsString);
    }
    
    public void writeUserInfo() {
        System.out.println("WRITING USER INFO");
        try {
            StringBuffer sb = new StringBuffer(userDetailsString);
            int start = sb.indexOf("|") + 1;
            int end = sb.indexOf("|", start + 1);
            String f = sb.substring(start, end);
            System.out.println("USER DETAILS: ");
            System.out.println(f);
            PrintWriter pw = new PrintWriter(new FileWriter("UserDetails.txt"));
            pw.println(f);
            pw.close();
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
    }
    
    public void close() {
        WindowEvent winclose = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclose);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Login = new javax.swing.JLabel();
        UsernameText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SubmitButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        PasswordText = new javax.swing.JPasswordField();
        RegisterButton = new javax.swing.JButton();
        PasswordNoMatch = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Login.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Login.setText("LOGIN");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Username");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Password");

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        RegisterButton.setText("Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        PasswordNoMatch.setForeground(new java.awt.Color(255, 0, 0));
        PasswordNoMatch.setText("Username and password do not match");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(415, 415, 415))
            .addGroup(layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PasswordText))
                    .addComponent(SubmitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)))
                .addGap(61, 61, 61)
                .addComponent(PasswordNoMatch, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(443, 443, 443)
                    .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(580, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordNoMatch, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(PasswordText))
                .addGap(58, 58, 58)
                .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 207, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(357, Short.MAX_VALUE)
                    .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(273, 273, 273)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // TODO add your handling code here:
        username = UsernameText.getText();
        password = PasswordText.getPassword();
        String p = "";
        for(char c : password)
            p += c;
        try {
            if(!ValidateUser(username, p))
                this.PasswordNoMatch.setVisible(true);
            else {
                this.PasswordNoMatch.setVisible(false);
                Location loc = new Location();
                loc.setVisible(true);
                this.setVisible(false);
                writeUserInfo();
            }   
        }
        catch (Exception e) {
            System.out.println("File error " + e);
        }
    }//GEN-LAST:event_SubmitButtonActionPerformed

    public boolean ValidateUser(String useText, String pasText) throws IOException {
        
        System.out.println("UseText: " + useText + " pasText: " + pasText);
        String userText,passText;
        System.out.println("userDetails: " + userDetailsString + ": userDetails");
        boolean val = false;
        StringBuffer sb = new StringBuffer(userDetailsString);
        System.out.println("String Buffer " + sb);
        int increment = 0;
        increment = sb.indexOf("*");
        System.out.println("increment before " + increment);
        if(increment != -1) {
            do {
                int userStart = increment;
                currentUser = userStart;
                int userEnd = sb.indexOf("*",userStart + 1);
                int passStart = sb.indexOf("$",userEnd + 1);
                int passEnd = sb.indexOf("$",passStart + 1);
                System.out.println("userStart: " + userStart + " userEnd " + userEnd + " passStart " + passStart + " passEnd " + passEnd);
                userText = sb.substring(userStart + 1,userEnd);
                passText = sb.substring(passStart + 1,passEnd);
                System.out.println("UserText: " + userText + " PassText: " + passText);
                if(useText.equals(userText)) {
                    if(pasText.equals(passText)) {
                        storeCurrentUserIndex();
                        return true;
                    }
                    val = false;
                }
                else
                    val = false;
                increment = sb.indexOf("*",passEnd);
            }while(increment != -1);
            return false;
        }
        return false;
    }
    
    public void storeCurrentUserIndex() {
        try {
            PrintWriter pw = new PrintWriter(currentUserIndex);
            pw.println(currentUser);
            pw.close();
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        
        
    }
    
    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        UsernameText.setText("");
        PasswordText.setText("");
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Register reg = new Register();
        reg.setVisible(true);
        
        
    }//GEN-LAST:event_RegisterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Login;
    private javax.swing.JLabel PasswordNoMatch;
    private javax.swing.JPasswordField PasswordText;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JTextField UsernameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
