/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sahir
 */
import java.io.*;
import java.util.*;
import javax.swing.*;

public class Doctor extends javax.swing.JFrame {

    /**
     * Creates new form Doctor
     */
    String PatName, PatAge, PatGender, PatPhone, PatAddress;
    String DocName, DocSpec, DocFB, DocPhone, DocHospital;
    Double DoctorRating;
    int ratingIndex;
    String loc;
    File userDetails, docDetails, locDetails;
    String userDetailsString, docDetailsString, recommendedDoctor;
    int currentUserIndex;
    JSlider slider;
    public Doctor() {
        initComponents();
        try {
            userDetails = new File("UserDetails.txt");
            locDetails = new File("Location.txt");
            loc = getLoc();
            loc = loc.trim();
            loc += "DoctorList.txt";
            docDetails = new File(loc);
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        getRecommendedDoctor();
        getUserDetails();
        getDocDetails();
        assignDocDetails();
        assignUserDetails();
        updateUserLabels();
        updateDocLabels();
        paintSliderTicks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        PatientNameLabel = new javax.swing.JLabel();
        PatientNameText = new javax.swing.JLabel();
        PatientAgeText = new javax.swing.JLabel();
        PatientAgeLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PatientAgeLabel1 = new javax.swing.JLabel();
        PatientGenderText = new javax.swing.JLabel();
        PatientAgeLabel2 = new javax.swing.JLabel();
        PatientPhoneText = new javax.swing.JLabel();
        PatientAgeLabel3 = new javax.swing.JLabel();
        PatientAddressText = new javax.swing.JLabel();
        DoctorNameLabel = new javax.swing.JLabel();
        DoctorNameText = new javax.swing.JLabel();
        DoctorSpecialityLabel = new javax.swing.JLabel();
        DoctorSpecialityText = new javax.swing.JLabel();
        DoctorFeedbackLabel = new javax.swing.JLabel();
        DoctorFeedbackText = new javax.swing.JLabel();
        PatientAgeLabel6 = new javax.swing.JLabel();
        DoctorPhoneText = new javax.swing.JLabel();
        PatientAgeLabel7 = new javax.swing.JLabel();
        DoctorHospitalText = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        DoctorRatingSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        DoctorFeedbackEnter = new javax.swing.JTextField();
        SubmitFeedback = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PATIENT");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        PatientNameLabel.setText("Name:");

        PatientNameText.setText("PatientNameText");

        PatientAgeText.setText("PatientAgeText");

        PatientAgeLabel.setText("Age:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("DOCTOR");

        PatientAgeLabel1.setText("Gender: ");

        PatientGenderText.setText("PatientAgeText");

        PatientAgeLabel2.setText("Phone:");

        PatientPhoneText.setText("PatientAgeText");

        PatientAgeLabel3.setText("Address:");

        PatientAddressText.setText("PatientAgeText");

        DoctorNameLabel.setText("Name:");

        DoctorNameText.setText("PatientNameText");

        DoctorSpecialityLabel.setText("Speciality");

        DoctorSpecialityText.setText("PatientAgeText");

        DoctorFeedbackLabel.setText("Feedback");

        DoctorFeedbackText.setText("PatientAgeText");

        PatientAgeLabel6.setText("Phone:");

        DoctorPhoneText.setText("PatientAgeText");

        PatientAgeLabel7.setText("Hospital");

        DoctorHospitalText.setText("PatientAgeText");

        jLabel2.setText("Doctor Rating:");

        jLabel3.setText("Doctor Feedback:");

        DoctorFeedbackEnter.setText("DoctorFeedbackText");

        SubmitFeedback.setText("Submit");
        SubmitFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitFeedbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PatientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PatientNameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PatientAgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PatientAgeText, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PatientAgeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PatientGenderText, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PatientAgeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PatientPhoneText, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PatientAgeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PatientAddressText, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)))
                        .addGap(20, 20, 20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DoctorNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DoctorNameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DoctorSpecialityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DoctorSpecialityText, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DoctorFeedbackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DoctorFeedbackText, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PatientAgeLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DoctorPhoneText, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PatientAgeLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DoctorHospitalText, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorRatingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorFeedbackEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubmitFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientAgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientAgeText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientAgeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientGenderText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientAgeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PatientPhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PatientAgeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE))
                            .addComponent(PatientAddressText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorSpecialityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorSpecialityText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorFeedbackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorFeedbackText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientAgeLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorPhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PatientAgeLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(DoctorHospitalText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DoctorRatingSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DoctorFeedbackEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(SubmitFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitFeedbackActionPerformed
        // TODO add your handling code here:
        String feedback = this.DoctorFeedbackEnter.getText();
        DoctorRating = (double)(slider.getValue());
        changeDoctorRating();
        try {
            PrintWriter pw = new PrintWriter("DoctorFeedback.txt");
            pw.println(feedback);
            pw.close();
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        Logout log = new Logout();
        this.setVisible(false);
        log.setVisible(true);
    }//GEN-LAST:event_SubmitFeedbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }
    
    public void changeDoctorRating() {
        double rating = Double.parseDouble(DocFB);
        System.out.println("rating: " + rating);
        double ratingPart = rating / 5;
        ratingPart = ratingPart * (DoctorRating / 100);
        System.out.println("Ratingpart: " + ratingPart);
        if(DoctorRating > (Double.parseDouble(DocFB) * 20))    
            rating = Double.parseDouble(DocFB) + ratingPart;
        else
            rating = Double.parseDouble(DocFB) - ratingPart;
        rating *= 100;
        int i = (int)(rating);
        rating = i / 100.0;
        String r = Double.toString(rating);
        int ratingStart, ratingEnd;
        StringBuffer sb = new StringBuffer(docDetailsString);
        ratingStart = ratingIndex;
        ratingEnd = sb.indexOf("\n", ratingStart + 1);
        sb.replace(ratingStart, ratingEnd, r);
        int start = 0, end, endCheck;
        try {
            PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter(docDetails)));
            do {
                end = sb.indexOf("\n", start + 1);
                pw.println(sb.substring(start, end));
                start = end + 1;
                endCheck = sb.indexOf("\n", start);
            }while(endCheck > 0);
            System.out.println("END");
            pw.println("$");
            pw.close();
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
    }
    
    public String getLoc() {
        String str = "";
        try {
            BufferedReader br = new BufferedReader(new FileReader(locDetails));
            String line;
            while((line = br.readLine()) != null)
                str = line;
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        return str;
    }
    
    public void paintSliderTicks() {
        slider = this.DoctorRatingSlider;
        slider.setMajorTickSpacing(20);
        slider.setPaintTicks(true);
        slider.setPaintLabels(true);
    }
    
    public void getUserDetails() {
        userDetailsString = "";
        System.out.println("userDetails: ");
        try {
            BufferedReader br = new BufferedReader(new FileReader("UserDetails.txt"));
            String line;
            while((line = br.readLine()) != null) {
                userDetailsString += line + "\n";
            } 
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        System.out.println("USER DETAILS STRING: " + userDetailsString);
    }
    
    public void getDocDetails() {
        docDetailsString = "";
        //System.out.println("docDetails: ");
        try {
            Scanner scan = new Scanner (docDetails);
            String line;
            while(!(line = scan.nextLine()).equals("$")) {
                //System.out.println(".");
                docDetailsString += line + "\n";
                //System.out.println("line is |" + line + "|");
            }
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        //System.out.println("DOC DETAILS STRING: " + docDetailsString);
    }
    
    public void getRecommendedDoctor() {
        try {
            BufferedReader br = new BufferedReader (new FileReader("RequiredDoctor.txt"));
            String line = br.readLine();
            recommendedDoctor = line;
        }
        catch(Exception e) {
            System.out.println("File Error: " + e);
        }
    }
    
    public void getCurrentUserIndex() {
        int index = 0;
        try {
            BufferedReader br = new BufferedReader(new FileReader("CurrentUserIndex.txt"));
            index = Integer.parseInt(br.readLine());
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        currentUserIndex = index;
    }
    
    public void assignUserDetails() {
        try {
            BufferedReader br = new BufferedReader(new FileReader("UserDetails.txt"));
            String line = br.readLine();
            if((line = br.readLine()) != null) 
                PatName = line;
            if((line = br.readLine()) != null) 
                PatPhone = line;
            if((line = br.readLine()) != null) 
                PatAge = line;
            if((line = br.readLine()) != null) 
                PatGender = line;
            if((line = br.readLine()) != null) 
                PatAddress = line;
            
        }
        catch (Exception e) {
            System.out.println("File error: " + e);
        }
        
        System.out.println("PatName : " + PatName);
        System.out.println("PatAge : " + PatAge);
        System.out.println("PatGender : " + PatGender);
        System.out.println("PatPhone : " + PatPhone);
        System.out.println("PatAddress : " + PatAddress);
    }
    
    public void assignDocDetails() {
        System.out.println("Assign doc details");
        System.out.println("FILE TEXT: " + docDetailsString + "|");
        StringBuffer sb = new StringBuffer(docDetailsString);
        int start = sb.indexOf(recommendedDoctor);
        int end = sb.indexOf("\n", start);
        DocSpec = sb.substring(start, end);
        System.out.println("DocSpec: " + DocSpec);
        start = end + 1;
        end = sb.indexOf("\n",start);
        DocName = sb.substring(start, end);
        System.out.println("DocName: " + DocName);
        start = end + 1;
        end = sb.indexOf("\n",start);
        ratingIndex = start;
        DocFB = sb.substring(start, end);
        System.out.println("DocFB: " + DocFB);
        start = end + 1;
        end = sb.indexOf("\n",start);
        DocPhone = sb.substring(start, end);
        System.out.println("DocPhone: " + DocPhone);
        start = end + 1;
        end = sb.indexOf("\n",start);
        DocHospital = sb.substring(start, end);
        System.out.println("DocHospital: " + DocHospital);
    }
    
    public void updateUserLabels() {
        this.PatientNameText.setText(PatName);
        this.PatientAgeText.setText(PatAge);
        this.PatientGenderText.setText(PatGender);
        this.PatientPhoneText.setText(PatPhone);
        this.PatientAddressText.setText(PatAddress);
    }
    
    public void updateDocLabels() {
        this.DoctorNameText.setText(DocName);
        this.DoctorSpecialityText.setText(DocSpec);
        this.DoctorFeedbackText.setText(DocFB);
        this.DoctorHospitalText.setText(DocHospital);
        this.DoctorPhoneText.setText(DocPhone);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DoctorFeedbackEnter;
    private javax.swing.JLabel DoctorFeedbackLabel;
    private javax.swing.JLabel DoctorFeedbackText;
    private javax.swing.JLabel DoctorHospitalText;
    private javax.swing.JLabel DoctorNameLabel;
    private javax.swing.JLabel DoctorNameText;
    private javax.swing.JLabel DoctorPhoneText;
    private javax.swing.JSlider DoctorRatingSlider;
    private javax.swing.JLabel DoctorSpecialityLabel;
    private javax.swing.JLabel DoctorSpecialityText;
    private javax.swing.JLabel PatientAddressText;
    private javax.swing.JLabel PatientAgeLabel;
    private javax.swing.JLabel PatientAgeLabel1;
    private javax.swing.JLabel PatientAgeLabel2;
    private javax.swing.JLabel PatientAgeLabel3;
    private javax.swing.JLabel PatientAgeLabel6;
    private javax.swing.JLabel PatientAgeLabel7;
    private javax.swing.JLabel PatientAgeText;
    private javax.swing.JLabel PatientGenderText;
    private javax.swing.JLabel PatientNameLabel;
    private javax.swing.JLabel PatientNameText;
    private javax.swing.JLabel PatientPhoneText;
    private javax.swing.JButton SubmitFeedback;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
